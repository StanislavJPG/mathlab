# Generated by Django 5.1.7 on 2025-04-02 13:51

import django.db.models.deletion
import django.utils.timezone
import django_lifecycle.mixins
import uuid
from django.db import migrations, models


def generate_chat_groups(apps, schema_editor):
    Theorist = apps.get_model('theorist', 'Theorist')
    TheoristChatGroupConfiguration = apps.get_model('theorist_chat', 'TheoristChatGroupConfiguration')

    for theorist in Theorist.objects.all():
        TheoristChatGroupConfiguration.objects.create(theorist=theorist)


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('theorist', '0008_alter_theorist_modified_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TheoristChatGroupConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_chats_available', models.BooleanField(default=True)),
                (
                    'theorist',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, related_name='chat_group', to='theorist.theorist'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Theorist Chat Group Configuration',
                'verbose_name_plural': 'Theorist Chat Group Configurations',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TheoristChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                (
                    'first_member',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='chat_rooms_initiated',
                        to='theorist.theorist',
                    ),
                ),
                (
                    'second_member',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='chat_rooms_received',
                        to='theorist.theorist',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Theorist Chat Room',
                'verbose_name_plural': 'Theorist Chat Rooms',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TheoristMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('message', models.TextField(max_length=500)),
                (
                    'room',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='messages',
                        to='theorist_chat.theoristchatroom',
                    ),
                ),
                (
                    'sender',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='messages',
                        to='theorist.theorist',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Theorist Message',
                'verbose_name_plural': 'Theorist Messages',
                'ordering': ('created_at',),
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name='theoristchatroom',
            constraint=models.UniqueConstraint(
                fields=('first_member', 'second_member'), name='theorist_chat_unique_members'
            ),
        ),
        migrations.RunPython(generate_chat_groups, reverse_code=migrations.RunPython.noop),
    ]
