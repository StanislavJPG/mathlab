"""
Django settings for mathlab project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

load_dotenv()
DEFAULT_ADMIN_TOKEN = os.getenv('DEFAULT_ADMIN_TOKEN')

# Application definition

INSTALLED_APPS = [
    'daphne',
    'admin_shortcuts',  # just before 'django.contrib.admin' <-- IMPORTANT
    # django's
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # installed packages
    'storages',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'channels',
    'widget_tweaks',
    'honeypot',
    'tinymce',
    'django_bleach',
    'easy_thumbnails',
    'hitcount',
    'django_countries',
    'captcha',
    'django_cleanup.apps.CleanupConfig',
    'django_tables2',
    'notifications',
    # common
    'server.common',
    # apps
    'server.apps.carousel.apps.CarouselConfig',
    'server.apps.complaints.apps.ComplaintsConfig',
    'server.apps.theorist_chat.apps.ChatConfig',
    'server.apps.theorist_community.apps.TheoristCommunityConfig',
    'server.apps.theorist_drafts.apps.DraftsConfig',
    'server.apps.forum.apps.ForumConfig',
    'server.apps.graphbuilder.apps.GraphbuilderConfig',
    'server.apps.math_news.apps.MathNewsConfig',
    'server.apps.solvers.apps.SolversConfig',
    'server.apps.theorist.apps.TheoristConfig',
    'server.apps.theorist_notifications.apps.TheoristNotificationsConfig',
    'server.apps.users.apps.UsersConfig',
    # templatetags
    'server.common.templatetags.widened_widget_tweaks',
    'server.common.templatetags.avatars',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    # installed packages
    'allauth.account.middleware.AccountMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # todo: remove this
    'django_htmx.middleware.HtmxMiddleware',
    # custom middlewares
    'server.common.middlewares.RequestLoggingMiddleware',
    'server.common.middlewares.HTMXToastMiddleware',
    'server.common.middlewares.UnifiedRequestMiddleware',
    'server.common.middlewares.OnboardingMiddleware',
]

ROOT_URLCONF = 'server.urls.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates', BASE_DIR / 'apps'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.i18n',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ]
        },
    },
]

WSGI_APPLICATION = 'server.settings.wsgi.application'
ASGI_APPLICATION = 'server.settings.asgi.application'

FIXTURE_DIRS = [
    os.path.join(BASE_DIR.parent, 'data', 'fixtures'),  # Global fixtures directory
]

# Prepare database

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASS'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'uk'
LANGUAGES = [
    ('en', 'English'),
    ('uk', 'Ukrainian'),
]
USE_I18N = True
USE_TZ = True

LOCALE_PATHS = [
    BASE_DIR.parent / 'locale',
]

TIME_ZONE = 'Europe/Kiev'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATICFILES_DIRS = [BASE_DIR / 'static/']

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR.parent / 'staticfiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR.parent / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
